# ===============================
# = DATA SOURCE
# ===============================

# Connection url for the database "final_project_spring_restautant"
spring.datasource.url = jdbc:mysql://localhost:3308/web_library?useSSL=false

# Username and password
spring.datasource.username = root
spring.datasource.password = password

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
#spring.jpa.show-sql = true
#spring.jpa.properties.hibernate.format_sql=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

spring.jpa.open-in-view=false

# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#configuring application name
spring.application.name = WebLibrary
#configuring port
server.port = 8080

server.error.whitelabel.enabled=false
server.error.path=/error

#log the SQL statements
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

#logging when using JdbcTemplate
logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE

spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

## upload file
#app.upload.dir=/Applications/ProgrammingFolder/JavaProgramming/WebLibraryPson/src/main/resources/excel/
#
## Excel file as input for storing it's data
#app.upload.file=/Applications/ProgrammingFolder/JavaProgramming/WebLibraryPson/src/main/resources/excel/testBookCatalog.xlsx

# upload file
app.upload.dir=/Users/olexandr/Desktop/

# Excel file as input for storing it's data
app.upload.file=/Users/olexandr/Desktop/fullTestLibrary.xlsx


# multipart
multipart.enabled=true
spring.http.multipart.max-file-size=500000KB
spring.http.multipart.max-request-size=500000KB


